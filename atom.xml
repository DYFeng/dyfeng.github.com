<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DY.Feng's Blog 叶毅锋的博客]]></title>
  <link href="http://www.dyfeng.org/atom.xml" rel="self"/>
  <link href="http://www.dyfeng.org/"/>
  <updated>2012-08-14T23:51:35+08:00</updated>
  <id>http://www.dyfeng.org/</id>
  <author>
    <name><![CDATA[(≧▼≦) 喵喵]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Octopress as Github Blog on Ubuntu 12.04]]></title>
    <link href="http://www.dyfeng.org/2012/08/12/using-octopress-as-github-blog/"/>
    <updated>2012-08-12T00:00:00+08:00</updated>
    <id>http://www.dyfeng.org/2012/08/12/using-octopress-as-github-blog</id>
    <content type="html"><![CDATA[<p>本来我的Github blog是使用<code>Jekyll-Bootstrap</code>作为生成引擎。不过他是把文章发给Github解析的，由于Github出于安全考虑，限制ruby脚本的运行，这样就导致很多功能实现不了。这时候我发现了<code>Octopress</code>引擎，他把你的branch分成两个，一个master，负责放置静态的页面，一个是source，放置程序本身和Markdown日志。</p>

<!-- more -->


<h1>名词解释</h1>

<p>无论是<code>Jekyll-Bootstrap</code>还是<code>Octopress</code>，他们都用到了<code>ruby</code>写的后端<code>jekyll</code>，我对<code>ruby</code>基本上没有多少接触，看到N个<code>ruby</code>的名词更是晕了，在此记录下</p>

<ul>
<li><p>Gem
ruby的<code>easy_install</code>，用来安装各种库，是用<code>ruby</code>写的，全称叫<code>rubygems</code>。</p></li>
<li><p>Bundler
基于gem的更高级管理工具，bundler相对于gem就好比apt-get相对于aptitude。不过他不是单纯的下载安装，他会根据本目录的<code>Gemfile</code>文件，把你缺少的包给装上。</p></li>
<li><p>Rvm
<code>Ruby Version Manager</code>，用来安装各种版本的ruby，问题是ubuntu有apt-get，这个不大派上用场。</p></li>
<li><p>Rbenv
<code>Simple Ruby Version Management</code>，也是用来安装各种版本的<code>ruby</code>。</p></li>
<li><p>Rake
<code>Ruby Make</code>，顾名思义就是ruby写的make，他对应的Makefile是<code>Rakefile</code></p></li>
</ul>


<h1>安装Octopress</h1>

<h2>配置安装环境</h2>

<h3>安装ruby 1.9.3</h3>

<p>要安装<code>Octopress</code>，必须有<code>ruby 1.9.3</code>。因为我不喜欢用第三方软件来安装<code>ruby</code>，所以我是<a href="http://lenni.info/blog/2012/05/installing-ruby-1-9-3-on-ubuntu-12-04-precise-pengolin/" title="Installing Ruby on Ubuntu 12.04">用apt-get的方式安装Ruby</a>。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install ruby1.9.1 ruby1.9.1-dev <span class="se">\</span>
</span><span class='line'>rubygems1.9.1 irb1.9.1 ri1.9.1 rdoc1.9.1 <span class="se">\</span>
</span><span class='line'>build-essential libopenssl-ruby1.9.1 libssl-dev zlib1g-dev
</span><span class='line'>
</span><span class='line'>sudo update-alternatives --install /usr/bin/ruby ruby /usr/bin/ruby1.9.1 400 <span class="se">\</span>
</span><span class='line'>    --slave   /usr/share/man/man1/ruby.1.gz ruby.1.gz <span class="se">\</span>
</span><span class='line'>    /usr/share/man/man1/ruby1.9.1.1.gz <span class="se">\</span>
</span><span class='line'>    --slave   /usr/bin/ri ri /usr/bin/ri1.9.1 <span class="se">\</span>
</span><span class='line'>    --slave   /usr/bin/irb irb /usr/bin/irb1.9.1 <span class="se">\</span>
</span><span class='line'>    --slave   /usr/bin/rdoc rdoc /usr/bin/rdoc1.9.1
</span><span class='line'>
</span><span class='line'>sudo update-alternatives --config ruby
</span><span class='line'>sudo update-alternatives --config gem
</span><span class='line'>
</span><span class='line'>ruby --version
</span></code></pre></td></tr></table></div></figure>


<p>这样子，我们就不需要用到<code>rvm</code>或者<code>rbenv</code>这些东西了。要注意一点的是，虽然看上去我们装的是<code>1.9.1</code>，其实他是<code>Ruby 1.9.3-p0</code>。为什么他又叫<code>1.9.1</code>呢？因为这个<code>1.9.1</code>只是一个<code>ABI</code>版本号而已。<code>ubuntu</code>有一个<code>ruby1.9.3</code>的虚包，其实也是指向<code>1.9.1</code>的。</p>

<h3>下载安装Octopress</h3>

<p>下载Octopress，再次确定<code>ruby</code>版本</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress    <span class="c"># If you use RVM, You&#39;ll be asked if you trust the .rvmrc file (say yes).</span>
</span><span class='line'>ruby --version  <span class="c"># Should report Ruby 1.9.3</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装<code>bundler</code>并使用<code>bundler</code>安装依赖</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>安装默认Octopress主题</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake install
</span></code></pre></td></tr></table></div></figure>


<h2>部署到Github</h2>

<p>其实部署Github非常简单。</p>

<p>交互式输入你的Github仓库地址（<code>git@github.com:username/username.github.com.git</code>，把<code>username</code>替换成你的用户名）。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>把你的域名提交给Github。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s1">&#39;www.dyfeng.org&#39;</span> &gt; <span class="nb">source</span>/CNAME
</span></code></pre></td></tr></table></div></figure>


<p>在<code>public</code>目录生成页面。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<p>将<code>public</code>里的静态页面复制到<code>_deploy</code>目录,上传到master branch</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>上传程序本身到source branch</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;init&#39;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个时候，如果一切正常，你应该可以看到你的<code>Octopress Blog</code>了。</p>

<h2>本地预览</h2>

<p>打开<a href="http://localhost:4000">http://localhost:4000</a>即可看到效果。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<h1>配置Octopress</h1>

<p>看看你的<code>_config.yml</code>文件，blog的基本设置都在里面了，包括第三方插件的设置。</p>

<p>在这里我们有<a href="https://github.com/imathis/octopress/wiki/List-Of-Octopress-Themes">一箩筐主题</a>供君选择，虽然能落入我法眼的真不多…我选择了<a href="http://mrzhang.me/">张神仙</a>童鞋的<a href="http://mrzhang.me/blog/blog-equals-github-plus-octopress.html">主题</a>，先用着先，以后再慢慢改。下面在默认主题的前提下安装他主题的方法。</p>

<h2>更改Octopress主题</h2>

<p>先下载一份</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git://github.com/jsw0528/octopress.git shenxian
</span><span class='line'><span class="nb">cd </span>shenxian
</span><span class='line'>bundle install
</span><span class='line'>git submodule init
</span><span class='line'>git submodule update
</span></code></pre></td></tr></table></div></figure>


<p>他的主题主要是新增加了<code>两个插件</code>，和一个<code>主题文件夹</code></p>

<ul>
<li>plugins/sh_js.rb</li>
<li>plugins/tag_generator.rb</li>
<li>.theme/blog</li>
</ul>


<p>复制到我们的Octopress里去</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp plugins/sh_js.rb ../octopress/plugins/
</span><span class='line'>cp plugins/tag_generator.rb ../octopress/plugins/
</span><span class='line'>cp -R .theme/blog ../octopress/.theme/
</span></code></pre></td></tr></table></div></figure>


<p>他的<code>tag_generator.rb</code>插件似乎在我的机子上有点问题，出错信息为</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tag_generator.rb:55:in `join': can't convert nil into String (TypeError)
</span><span class='line'>from /media/DOCUMENT/github/octopress/plugins/tag_generator.rb:55:in `block in write_tag_indexes'
</span><span class='line'>from /media/DOCUMENT/github/octopress/plugins/tag_generator.rb:54:in `each'
</span><span class='line'>from /media/DOCUMENT/github/octopress/plugins/tag_generator.rb:54:in `write_tag_indexes'
</span><span class='line'>from /media/DOCUMENT/github/octopress/plugins/tag_generator.rb:73:in `generate'
</span><span class='line'>from /var/lib/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:184:in `block in generate'
</span><span class='line'>from /var/lib/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:183:in `each'
</span><span class='line'>from /var/lib/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:183:in `generate'
</span><span class='line'>from /var/lib/gems/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:39:in `process'
</span><span class='line'>from /var/lib/gems/1.9.1/gems/jekyll-0.11.2/bin/jekyll:250:in `&lt;top (required)="">'
</span><span class='line'>from /usr/local/bin/jekyll:19:in `load'
</span><span class='line'>from /usr/local/bin/jekyll:19:in `&lt;main>'</span></code></pre></td></tr></table></div></figure>


<p>解决方法是将<code>tag_generator.rb</code>55行</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">self</span><span class="o">.</span><span class="n">write_tag_index</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">config</span><span class="o">[</span><span class="s1">&#39;tag_dir&#39;</span><span class="o">]</span><span class="p">,</span> <span class="n">tag</span><span class="o">.</span><span class="n">to_url</span><span class="o">.</span><span class="n">downcase</span><span class="p">),</span> <span class="n">tag</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>改为</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">self</span><span class="o">.</span><span class="n">write_tag_index</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">config</span><span class="o">[</span><span class="s1">&#39;tag_dir&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="n">tag</span><span class="o">.</span><span class="n">to_url</span><span class="o">.</span><span class="n">downcase</span><span class="p">),</span> <span class="n">tag</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>切换主题</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ../octopress/
</span><span class='line'>rake install<span class="o">[</span><span class="s1">&#39;blog&#39;</span><span class="o">]</span>
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>现在打开<a href="http://localhost:4000">http://localhost:4000</a>应该可以看到效果了。</p>

<h1>使用Octopress</h1>

<p>新建文章，很贴心的一点是中文的题目他会转换为拼音，一些特殊符号他都会帮你转成相应的英文。不过为了更好地SEO，最好还是起一个有意义的题目，而不是一堆拼音。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;The Title of Your Article&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post on Github]]></title>
    <link href="http://www.dyfeng.org/2012/08/11/first-post-on-github/"/>
    <updated>2012-08-11T00:00:00+08:00</updated>
    <id>http://www.dyfeng.org/2012/08/11/first-post-on-github</id>
    <content type="html"><![CDATA[<p>Included file &#8216;JB/setup&#8217; not found in _includes directory</p>

<p>终于出炉了！！这是我第一篇用github做blog的文章！！小生愚钝，在Win7下弄了4个小时才弄出来。遇到了cygwin和gem不兼容、gem源被墙、jekyll在Win7下各种奇怪的症状&#8230;得感叹下在Windows下生活的孩子不容易吖。</p>

<p>因为在Windows下操作，入乡随俗地下载了个Github的Windows客户端，那界面很炫，很有Win8 feel，难道这就是传说中的WinForm。可惜就是push的时候太慢了点，感觉要比命令行下要慢半拍。而且他在界面里不叫push，叫sync，这个名词更容易让人理解。</p>

<p>下面是各种华丽的Markdown测试</p>

<pre class="prettyprint">
require 'redcarpet'
markdown = Redcarpet.new("Hello World!")
puts markdown.to_html
</pre>




<pre class="prettyprint">
##大标题
###小标题
####小小标题
#####小小小标题
######你还能再小点不
#######其实我能一直地小，只是css没有定义到了
</pre>


<h2>大标题</h2>

<h3>小标题</h3>

<h4>小小标题</h4>

<h5>小小小标题</h5>

<h6>你还能再小点不</h6>

<h6>#其实我能一直地小，只是css没有定义到了</h6>

<pre class="prettyprint">
*强调一下*

**再强调一下**

***我次次强调我容易吗我***
</pre>


<p><em>强调一下</em></p>

<p><strong>再强调一下</strong></p>

<p><strong><em>我次次强调我容易吗我</em></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[减少xampp内存占用]]></title>
    <link href="http://www.dyfeng.org/2012/08/11/decrease-threads-with-xampp/"/>
    <updated>2012-08-11T00:00:00+08:00</updated>
    <id>http://www.dyfeng.org/2012/08/11/decrease-threads-with-xampp</id>
    <content type="html"><![CDATA[<p>Included file &#8216;JB/setup&#8217; not found in _includes directory</p>

<h2>特别长的前话</h2>

<p>最近有个改写moodle系统插件的项目，所以我又重操起php的老行当。moodle是一个非常不错的考试系统，多种题型，多种计分方式，唯一的缺点就是文档太少，非常的缺&#8230;开发人员列表里面也看到了好几个中国人的名字。</p>

<p>下载，放到htdocs，<code>sudo lampp start</code>，结果发现他竟然要求php5.3以上。我的php还是5.1的老版本，那没法，唯有下载个最新的xampp吧。一切还算顺利，除了xampp好像怪怪的。因为我改了配置文件后，再重启，他竟然好像没有反应，这个到现在还是个不解之谜。</p>

<p>在开发的过程中，我还发现电脑卡了很多，<code>ps -A|grep httpd</code>一看，哇的一刷。内存给我用了几百兆了，虽然我有4G也不是这样浪费的嘛，我只是开发而已，没有必要开这么线程。下面记录一下给xampp减少线程的方法。</p>

<h2>减少xampp线程数，享受低碳生活</h2>

<h3>先看看Apache现在是在什么模式下工作</h3>

<pre><code>feng@feng:/opt/lampp$ /opt/lampp/bin/apachectl -lCompiled in modules:
core.c
prefork.c
http_core.c
mod_so.c
</code></pre>

<p>看到了吧，原来xampp的Apache默认是在<em>prefork</em>模式下跑的，那我们得相应修改prefox模式的进程数。</p>

<h3>修改Apache配置</h3>

<h4>修改httpd.conf</h4>

<pre><code>feng@feng:/opt/lampp$ vim etc/httpd.conf
</code></pre>

<p>找到<code>#Include etc/extra/httpd-mpm.conf</code>去掉注释，保存。</p>

<h4>修改httpd-mpm.conf</h4>

<pre><code>feng@feng:/opt/lampp$ vim etc/extra/httpd-mpm.conf 
</code></pre>

<p>找到</p>

<pre><code>&lt;IfModule mpm_prefork_module&gt;
StartServers          2
MinSpareServers       2
MaxSpareServers      5
MaxClients          5
MaxRequestsPerChild   0
&lt;/IfModule&gt;
</code></pre>

<p>修改其中的参数，下面是这几个参数的详细解释：</p>

<p>Apache一开始会新建<em>StartServers</em>个子进程后，为了满足<em>MinSpareServers</em>设置的需要，创建一个进程，等待一秒钟，继续创建两个，再等待一秒钟，继续创建四个……如此按指数级增加创建的进程数，最多达到每秒32个，直到满足<em>MinSpareServers</em>设置的值为止。</p>

<p>这种模式可以不必在请求到来时再产生新的进程，从而减小了系统开销以增加性能。<em>MaxSpareServers</em>设置了最大的空闲进程数，如果空闲进程数大于这个值，Apache会自动kill掉一些多余进程。这个值不要设得过大，但如果设的值比MinSpareServers小，Apache会自动把其调整为 MinSpareServers+1。</p>

<p>如果站点负载较大，可考虑同时加大<em>MinSpareServers</em>和<em>MaxSpareServers</em>。 <em>MaxRequestsPerChild</em>设置的是每个子进程可处理的请求数。每个子进程在处理了<em>MaxRequestsPerChild</em>个请求后将自动销毁。0意味着无限，即子进程永不销毁。虽然缺省设为0可以使每个子进程处理更多的请求，但如果设成非零值也有两点重要的好处：</p>

<blockquote><ol>
<li>可防止意外的内存泄漏。</li>
<li>在服务器负载下降的时侯会自动减少子进程数。</li>
</ol>
</blockquote>

<p>因此，可根据服务器的负载来调整这个值。<em>MaxClients</em>是这些指令中最为重要的一个，设定的是 Apache可以同时处理的请求，是对Apache性能影响最大的参数。其缺省值150是远远不够的，如果请求总数已达到这个值（可通过<code>ps -ef|grep http|wc -l</code>来确认），那么后面的请求就要排队，直到某个已处理请求完毕。这就是系统资源还剩下很多而HTTP访问却很慢的主要原因。虽然理论上这个值越大，可以处理的请求就越多，但Apache默认的限制不能大于256。</p>
]]></content>
  </entry>
  
</feed>
